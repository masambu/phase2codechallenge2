{"ast":null,"code":"var _jsxFileName = \"/home/masambu/Desktop/SE/phase2/phase2codechallenge2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport BotArmy from \"./components/BotArmy\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://my-json-server.typicode.com/leon-kxng/BOTT-BATLR/bots').then(resp => resp.json()).then(data => setBots(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const releaseFromArmy = updatedEnlistedBots => {\n    // Implement the logic to release bots from the army\n    setEnlistedBots(updatedEnlistedBots);\n  };\n  function handleBotDischarge(bot) {\n    // Remove the bot from enlistedBots in the frontend\n    const updatedEnlistedBots = enlistedBots.filter(enlistedBot => enlistedBot.id !== bot.id);\n    setEnlistedBots(updatedEnlistedBots);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(BotArmy, {\n      enlistedBots: enlistedBots,\n      releaseFromYourBotArmy: releaseFromArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistedBots: enlistedBots,\n      setEnlistedBots: setEnlistedBots,\n      handleBotDischarge: handleBotDischarge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","BotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","resp","json","data","catch","error","console","releaseFromArmy","updatedEnlistedBots","handleBotDischarge","bot","filter","enlistedBot","id","className","children","releaseFromYourBotArmy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/masambu/Desktop/SE/phase2/phase2codechallenge2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BotCollection from \"./components/BotCollection\";\nimport BotArmy from \"./components/BotArmy\";\nimport \"./App.css\";\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]); \n\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://my-json-server.typicode.com/leon-kxng/BOTT-BATLR/bots')\n    .then((resp) => resp.json())\n    .then((data) => setBots(data))\n    .catch((error) => console.error('Error fetching data:', error));\n}, []);\n\nconst releaseFromArmy = (updatedEnlistedBots) => {\n  // Implement the logic to release bots from the army\n  setEnlistedBots(updatedEnlistedBots);\n};\n\nfunction handleBotDischarge(bot) {\n  // Remove the bot from enlistedBots in the frontend\n  const updatedEnlistedBots = enlistedBots.filter((enlistedBot) => enlistedBot.id !== bot.id);\n  setEnlistedBots(updatedEnlistedBots);\n}\n \n\n  return (\n    <div className=\"App\">\n       <BotArmy \n        enlistedBots={enlistedBots} \n        releaseFromYourBotArmy={releaseFromArmy}/> \n\n      <BotCollection\n       bots={bots} \n       enlistedBots={enlistedBots} \n       setEnlistedBots={setEnlistedBots}\n       handleBotDischarge={handleBotDischarge}\n      />\n      \n      \n    </div>\n  );\n}\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,+DAA+D,CAAC,CACrEC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAKP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,mBAAmB,IAAK;IAC/C;IACAV,eAAe,CAACU,mBAAmB,CAAC;EACtC,CAAC;EAED,SAASC,kBAAkBA,CAACC,GAAG,EAAE;IAC/B;IACA,MAAMF,mBAAmB,GAAGX,YAAY,CAACc,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC;IAC3Ff,eAAe,CAACU,mBAAmB,CAAC;EACtC;EAGE,oBACEhB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACjBvB,OAAA,CAACF,OAAO;MACPO,YAAY,EAAEA,YAAa;MAC3BmB,sBAAsB,EAAET;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE5C5B,OAAA,CAACH,aAAa;MACbM,IAAI,EAAEA,IAAK;MACXE,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCW,kBAAkB,EAAEA;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEV;AAAC1B,EAAA,CAxCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCZ,eAAeA,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}